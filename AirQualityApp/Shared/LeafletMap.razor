@page "/leafletmap"
@using Microsoft.JSInterop
@using AirQualityApp.Services
@using System.Text.Json
@inject IJSRuntime JSRuntime
@inject OpenAqApiClient OpenAqApiClient
@using AirQualityApp.Models


<div id="map"></div>

@code {
    private async Task InitializeMapAsync()
    {
        var map = await JSRuntime.InvokeAsync<IJSObjectReference>("initializeAirQualityMap");

    // Fetch data from DB
        var measurements = new List<Measurement>();
        var countries = OpenAqApiClient.GetCountriesFromDb();

        foreach (var country in countries)
        {
            var pm10 = OpenAqApiClient.GetGlobalMeasurementsFromDb("pm10", country.Code);
            var pm25 = OpenAqApiClient.GetGlobalMeasurementsFromDb("pm25", country.Code);

            measurements.AddRange(pm10);
            measurements.AddRange(pm25);
        }

        try
        {
            var measurementsByLocation = OpenAqApiClient.GroupMeasurementsByLocation(measurements);
            Console.WriteLine("Received measurements by location: " + measurementsByLocation.ToString());
            await JSRuntime.InvokeVoidAsync("updateMarkers", map, measurementsByLocation);
        }
        catch (Exception e)
        {
            Console.WriteLine("Error: " + e.Message);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            while (true)
            {
                await InitializeMapAsync();
                await Task.Delay(TimeSpan.FromMinutes(10));
            }
        }
    }
}